spring.application.name=stream-provider
server.port=8200

#第一组kafka,对应OrderMessage的input和output值
#spring.cloud.stream.bindings.order_consumer.destination=order_notice
#spring.cloud.stream.bindings.order_consumer.binder=kafka1
#spring.cloud.stream.bindings.order_consumer.group=testGroup

spring.cloud.stream.bindings.order_sender.destination=order_notice
spring.cloud.stream.bindings.order_sender.binder=kafka1
spring.cloud.stream.bindings.order_sender.group=testGroup

#
spring.cloud.stream.binders.kafka1.type=kafka
spring.cloud.stream.binders.kafka1.environment.spring.cloud.stream.kafka.binder.brokers=127.0.0.1:9092
spring.cloud.stream.binders.kafka1.environment.spring.cloud.stream.kafka.binder.zkNodes=127.0.0.1:2181
spring.cloud.stream.binders.kafka1.environment.spring.cloud.stream.kafka.binder.instanceCount=1
spring.cloud.stream.binders.kafka1.environment.spring.cloud.stream.kafka.binder.instanceIndex=0
spring.cloud.stream.binders.kafka1.environment.spring.cloud.stream.kafka.binder.auto-create-topics=true

#第二组kafka
#spring.cloud.stream.bindings.output1.destination=dataOut
#spring.cloud.stream.bindings.output1.binder=kafka2
#spring.cloud.stream.bindings.input1.destination=dataOut
#spring.cloud.stream.bindings.input1.binder=kafka2

#spring.cloud.stream.binders.<binderName>: <binderName>对应spring.cloud.stream.bindings.input.binder的值
#spring.cloud.stream.binders.kafka2.type=kafka
#spring.cloud.stream.binders.kafka2.environment.spring.cloud.stream.kafka.binder.brokers: ${kafkaBroker1}
#spring.cloud.stream.binders.kafka2.environment.spring.cloud.stream.kafka.binder.zkNodes: ${zk1}
